package entities;

import java.util.Collection;
import java.util.HashSet;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Entity;

import org.hibernate.validator.constraints.NotBlank;
import org.hibernate.validator.constraints.NotEmpty;
import org.hibernate.validator.constraints.Range;
import org.springframework.util.Assert;

import domain.DomainEntity;

@Entity
@Access(AccessType.PROPERTY)
public class Exam extends DomainEntity {
	
	private String title;
	private Double minimumMark;
	private Integer minimumScore;
	private Collection<Question> questions;

	public Exam()
	{
		super();

		this.questions = new HashSet<Question>();
	}

	@NotBlank
	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		Assert.notNull(title);
		this.title = title;
	}

	@Min(0)
	public Double getMinimumMark() {
		return minimumMark;
	}

	public void setMinimumMark(Double minimumMark) {
		Assert.notNull(minimumMark);
		this.minimumMark = minimumMark;
	}

	@Range(min=0, max=99)
	public Integer getMinimumScore() {
		return minimumScore;
	}

	public void setMinimumScore(Integer minimumScore) {
		Assert.notNull(minimumScore);
		this.minimumScore = minimumScore;
	}

	@NotEmpty
	public Collection<Question> getQuestions() {
		return questions;
	}

	public void setQuestions(Collection<Question> questions) {
		Assert.notEmpty(questions);
		assert questions != null;

		this.questions = questions;
	}
	
	public void addQuestion(Question question)
	{
		Assert.notNull(question);
		this.questions.add(question);
	}
	
	

}
